{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"comment":"\nA simple 2D canvas plotting library for generating graphs in a browser.\n\nSupports the following plot styles:\n\n* data\n* points (scatter)\n* line\n* line with points (default)\n* curve\n* curve with points\n\n\nAn example of the simplest usage of the library would be:\n    var values = [1, 3, 2, 5, 6.3, 17, 4];\n    var myPlot = plot(values);\n\nAn array of data of type List is the only required parameter. However,\nthe plot() command has a number of optional named parameters that allow\na high level of configurability.\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/simplot.dart","id":"simplot","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\n  Connect to a server through a websocket to retrieve data for plotting.\n  Usage:\n    String host = 'local';\n    int port = 8080;\n    var myDisplay = query('#console');\n    var myMessage = 'Send data request';\n    Future reqData = requestDataWS(host, port, message:myMessage,\n        display:myDisplay);\n    reqData.then((data) {\n      plot(data);\n    });\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/request_data_ws.dart","name":"requestDataWS","id":"requestDataWS4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"host","id":"host","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"port","id":"port","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'Please send data.'","name":"message","id":"message","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.dom.html/Element","name":"Element"},"isOptional":true,"defaultValue":"null","name":"display","id":"display","line":"23","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nTop level functions to implement some basic logarithms for plot range\ncalculations.\n\nThe log(x) function in dart:math returns the natural logarithm of x:\n\n* log based 10 of x = natural log of x / natural log of 10\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/logarithm.dart","name":"log10","id":"log101()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nTop level functions to implement some basic logarithms for plot range\ncalculations.\n\nThe log(x) function in dart:math returns the natural logarithm of x:\n\n* log based 2 of x = natural log of x / natural log of 2\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/logarithm.dart","name":"log2","id":"log21()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart.dom.html/WindowBase","name":"WindowBase"},"comment":"\r\nDraws all plots to a new canvas and opens a new window to allow for saving.\n\nAccepts 3 parameters, two of which are optional named parameters:\n\n* List plots: A list of the plots that are to be printed.\n* num scale (optional): Scales size of each canvas to be plotted (default = 1).\n* bool quad: Determines arrangement of multiplot canvases. If quad is true\n  (default), plots are arranged in a 2 x n/2 matrix.  Otherwise, they are\n  arranged vertically in a a 1 x n matrix.\n\n Usage:\n    var allPlots = new List();\n    var myScatter = plot(yval, xdata:xval, style:'points', color1:'red',\n        range:2, index:1, container:\"#quad\");\n    myScatter\n      ..grid()\n      ..xlabel('sample x data')\n      ..ylabel('sample y data')\n      ..title('Example of Scatter Plot');\n    allPlots.add(myScatter);\n\n    var myLines = plot(yval, y2:xval, y3:yShort, style:'linepts', range:2,\n        index:2, container:\"#myContainer\");\n    myLines\n      ..grid()\n      ..xlabel('Samples (n)')\n      ..ylabel('data')\n      ..title('Example of Plotting Sampled Data')\n      ..date()\n      ..legend()\n      ..xmarker(yShort[2], true)\n      ..xmarker(4, true);\n    allPlots.add(myLines);\n\n    WindowBase myPlotWindow = saveAll(allPlots);\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/plot2d.dart","name":"saveAll","id":"saveAll3()","children":[{"ref":{"refId":"dart.core/List","name":"List"},"name":"plots","id":"plots","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/num","name":"num"},"isOptional":true,"defaultValue":"1.0","name":"scale","id":"scale","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"quad","id":"quad","kind":"param"}],"line":"780","kind":"method"},{"returnType":{"refId":"simplot/Plot2D","name":"Plot2D"},"comment":"\r\n\nReturns an instance of the Plot2D class for graphing data to an HTML canvas.\n\nOnly one parameter is required - a List representing the data to be plotted.\nIf x axis information is not specified, a vector is generated equivalent to\nthe size of the first ydata supplied in units from 1 to ydata.length.\n\nCurrent styles supported:\n\n* data\n* curve\n* curvepts (curve with points)\n* line\n* linepts (default)\n* points\n\n\nVariable r is the range which specifies how many subplots (1 - 4).\nVariable i is the index of the subplot (1 - 4).\nBoth variables default to 1 for a single plot.\n\nSupported methods are:\n    grid()\n    xlabel()\n    ylabel()\n    title()\n    date()\n    legend()\n    xmarker()\n    ymarker()\n    save()\n\nThere is also a top level function, saveAll(), for saving a group of subplots.\n\nProvides a number of named optional parameters:\n\n* xdata: by default, the x axis is simply defined as the number of data\n  points in y1, but the axis data points can be specified by providing a\n  List for xdata.  All plots are plotted against this single x axis.\n* y2 - y4: List representing additional data to be plotted on same axes.\n* style: The default style is data, which plots the data as points with\n  a line to the x axis.  Supported optional styles include points, curve,\n  curvepts, line, linepts.\n* color1 - color4: Sets the color for each set of data.\n* range: The number of subplots.  Default is 1.\n* index: Which subplot is currently being drawn.\n* large: Default is true, but by setting this boolean value to false, will\n  shrink the drawn size.\n* container: The id of the container for the plots.  Default is #simPlotQuad.\n\nAll plots are assigned a unique id of simPlot$index (ie, #simPlot1) and a\ncommon class of simPlot (ie, .simPlot).\n\nUsage (given up to four Lists of type num - ie, myData1, myData2,...):\n\n    import 'package:simplot/simplot.dart';\n\n    void main() {\n      var myData1 = [  ....  ];\n      var myData2 = [  ....  ];\n      var myPlot = plot(myData1, y2:myData2);\n      myPlot\n        ..grid();\n        ..xlabel('Samples (n)');\n        ..ylabel('data');\n        ..title('Example of Plotting Sampled Data');\n        ..date();\n        ..legend(l1:'3x + 2', l2:'sin(2x)');\n        ..xmarker(xval, true);\n        ..ymarker(yval);\n        ..save();\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/plot2d.dart","name":"plot","id":"plot17()","children":[{"ref":{"refId":"dart.core/List","name":"List"},"name":"y1","id":"y1","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","name":"List"},"isOptional":true,"defaultValue":"null","name":"xdata","id":"xdata","line":"83","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","name":"List"},"isOptional":true,"defaultValue":"null","name":"y2","id":"y2","line":"84","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","name":"List"},"isOptional":true,"defaultValue":"null","name":"y3","id":"y3","line":"85","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","name":"List"},"isOptional":true,"defaultValue":"null","name":"y4","id":"y4","line":"86","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'linepts'","name":"style1","id":"style1","line":"87","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"style2","id":"style2","line":"88","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"style3","id":"style3","line":"89","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"style4","id":"style4","line":"90","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'black'","name":"color1","id":"color1","line":"91","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'ForestGreen'","name":"color2","id":"color2","line":"92","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'Navy'","name":"color3","id":"color3","line":"93","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'FireBrick'","name":"color4","id":"color4","line":"94","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"2","name":"linewidth","id":"linewidth","line":"95","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"range","id":"range","line":"96","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"index","id":"index","line":"97","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'#simPlotQuad'","name":"container","id":"container","line":"98","kind":"param"}],"line":"82","kind":"method"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA class for adding a time stamp.\n\nMethod stamp([bool short = false]) returns a string for use as a time stamp.\n\nThis class is instantiated using the date() method of the top level\nplot() function.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.date();\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/date_time.dart","name":"TimeStamp","id":"TimeStamp","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"stamp","id":"stamp1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"short","id":"short","kind":"param"}],"line":"57","kind":"method"},{"ref":{"refId":"dart.collection/HashMap","name":"HashMap"},"name":"_months","isPrivate":true,"id":"_months","line":"22","kind":"variable"},{"ref":{"refId":"dart.collection/HashMap","name":"HashMap"},"name":"_weekdays","isPrivate":true,"id":"_weekdays","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/DateTime","name":"DateTime"},"name":"_currentTime","isPrivate":true,"id":"_currentTime","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_year","isPrivate":true,"id":"_year","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_month","isPrivate":true,"id":"_month","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_day","isPrivate":true,"id":"_day","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_hour","isPrivate":true,"id":"_hour","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_minute","isPrivate":true,"id":"_minute","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_weekday","isPrivate":true,"id":"_weekday","line":"25","kind":"variable"},{"name":"TimeStamp","id":"TimeStamp0()","line":"27","kind":"constructor"}],"line":"20","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\r\nConfigures the axes and draws the data to the canvas.\n\nIt is not recommended to instantiate this class directly, but rather through\nthe top level function plot().\n\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/plot2d.dart","name":"Plot2D","id":"Plot2D","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Private methods for drawing plots.","name":"_drawData","isPrivate":true,"id":"_drawData2()","children":[{"name":"dataColor","id":"dataColor","kind":"param"},{"name":"yvals","id":"yvals","kind":"param"}],"line":"345","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_drawPoints","isPrivate":true,"id":"_drawPoints2()","children":[{"name":"dataColor","id":"dataColor","kind":"param"},{"name":"yvals","id":"yvals","kind":"param"}],"line":"364","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_drawCurve","isPrivate":true,"id":"_drawCurve3()","children":[{"name":"dataColor","id":"dataColor","kind":"param"},{"name":"yvals","id":"yvals","kind":"param"},{"name":"style","id":"style","kind":"param"}],"line":"379","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_drawLine","isPrivate":true,"id":"_drawLine3()","children":[{"name":"dataColor","id":"dataColor","kind":"param"},{"name":"yvals","id":"yvals","kind":"param"},{"name":"style","id":"style","kind":"param"}],"line":"422","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a grid to a plot.\n\nUses the same spacing as the x and y tick marks.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.grid();\n","name":"grid","id":"grid0()","line":"462","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a label to the x axis.\n\nThe xlabelName is a required String value.  Method also accepts\ntwo optional named parameters, a String value for the color of the label,\nand a String value for the label font.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.xlabel('samples(n)', color:'red', font:'8pt Arial');\n","name":"xlabel","id":"xlabel3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"xlabelName","id":"xlabelName","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'DarkSlateGray'","name":"color","id":"color","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'11pt Verdana'","name":"font","id":"font","line":"490","kind":"param"}],"line":"489","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a label to the y axis.\n\nThe ylabelName is a required String value.  Method also accepts\ntwo optional named parameters, a String value for the color of the label,\nand a String value for the label font.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.ylabel('data(x1e3)', color:'#ccc', font:'16pt Helvetica');\n\nFor y values with a large number of signicant digits, it is recommended\nthat you scale the data prior to plotting.  It is currently an issue\nto build in the scaling and allow different number notation.  But\ncurrently, large number of significant digits will likely cause the\nylabel to draw over the top of the yaxis tick values.\n","name":"ylabel","id":"ylabel3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"ylabelName","id":"ylabelName","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'DarkSlateGray'","name":"color","id":"color","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'11pt Verdana'","name":"font","id":"font","line":"523","kind":"param"}],"line":"522","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a title to the current plot.\n\nThe title is a required String value.  The method also accepts\ntwo optional named parameters, a String value for the color of the label,\nand a String value for the label font.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.title('A Sample Plot', color:'rgba(42, 42, 88, 0.5)',\n        font:'14pt Caslon');\n","name":"title","id":"title3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"title","id":"title","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'DarkSlateGray'","name":"color","id":"color","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'13pt Verdana'","name":"font","id":"font","line":"553","kind":"param"}],"line":"552","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a date stamp to the current plot.\n\nThe date stamp can be in either a \"short\" form or a \"long\" (default) form.\n\n* long: 9:56pm Tue 16-Oct-2012\n* short: 9:56pm 10/16/2012\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.date(true);\n","name":"date","id":"date1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"short","id":"short","kind":"param"}],"line":"573","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a legend to the current plot.\nAll parameters are optional.  In its simpliest form, the legend uses\nthe default labels for each graph in the plot (up to 4 graphs per plot).\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.legend();\n\nThis method also allows for the specification of names for each graph.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.legend(y1:'y = 3x - 2', y2:'cosh(x)');\n\n","name":"legend","id":"legend6()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'y1'","name":"l1","id":"l1","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'y2'","name":"l2","id":"l2","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'y3'","name":"l3","id":"l3","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'y4'","name":"l4","id":"l4","line":"599","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'bold 12px Tahoma'","name":"font","id":"font","line":"599","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"top","id":"top","line":"600","kind":"param"}],"line":"598","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a marker to the x axis of the current plot at position x = xval.\n\nThe method requires an x value to be provided.  If the value of x specified\nis not a data point (ie, indexOf(xval) returns -1) and the optional\nannotation variable is set to true, the data will not be displayed (ie,\nthe marker x position is not interpolated between data points).\n\nThe color and size of the marker can also be specified.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.xmarker(data[4], true);\n","name":"xmarker","id":"xmarker4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"xval","id":"xval","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"annotate","id":"annotate","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'rgb(85, 98, 112)'","name":"color","id":"color","kind":"param"},{"isNamed":true,"isOptional":true,"defaultValue":"1","name":"width","id":"width","line":"655","kind":"param"}],"line":"654","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nAdds a marker to the y axis of the current plot at position y = yval.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.ymarker(0);\n","name":"ymarker","id":"ymarker3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"yval","id":"yval","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'rgb(85, 98, 112)'","name":"color","id":"color","kind":"param"},{"isNamed":true,"isOptional":true,"defaultValue":"1","name":"width","id":"width","kind":"param"}],"line":"719","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\r\nSaves an individual plot by creating a PNG image in a new browser window.\n\nUsage:\n    var myPlot = plot(data);\n    myPlot.save();\n","name":"save","id":"save1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'plotWindow'","name":"name","id":"name","kind":"param"}],"line":"737","kind":"method"},{"ref":{"refId":"simplot/_AxisConfigResults","name":"_AxisConfigResults"},"name":"_yAxisCfg","isPrivate":true,"id":"_yAxisCfg","line":"172","kind":"variable"},{"ref":{"refId":"simplot/_AxisConfigResults","name":"_AxisConfigResults"},"name":"_xAxisCfg","isPrivate":true,"id":"_xAxisCfg","line":"173","kind":"variable"},{"isFinal":true,"name":"_border","isPrivate":true,"id":"_border","line":"175","kind":"variable"},{"isFinal":true,"name":"_borderL","isPrivate":true,"id":"_borderL","line":"176","kind":"variable"},{"isFinal":true,"name":"_borderT","isPrivate":true,"id":"_borderT","line":"177","kind":"variable"},{"isFinal":true,"name":"_tickSize","isPrivate":true,"id":"_tickSize","line":"178","kind":"variable"},{"isFinal":true,"name":"_index","isPrivate":true,"id":"_index","line":"179","kind":"variable"},{"ref":{"refId":"dart.dom.html/CanvasRenderingContext2D","name":"CanvasRenderingContext2D"},"isFinal":true,"name":"context","id":"context","line":"181","kind":"variable"},{"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"isFinal":true,"name":"_ydata","isPrivate":true,"id":"_ydata","line":"182","kind":"variable"},{"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"isFinal":true,"name":"_color","isPrivate":true,"id":"_color","line":"182","kind":"variable"},{"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"isFinal":true,"name":"_style","isPrivate":true,"id":"_style","line":"182","kind":"variable"},{"ref":{"refId":"dart.core/List","name":"List"},"isFinal":true,"name":"_xdata","isPrivate":true,"id":"_xdata","line":"183","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"_pwidth","isPrivate":true,"id":"_pwidth","line":"184","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"_pheight","isPrivate":true,"id":"_pheight","line":"184","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_linewidth","isPrivate":true,"id":"_linewidth","line":"185","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_xmin","isPrivate":true,"id":"_xmin","line":"186","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_xmax","isPrivate":true,"id":"_xmax","line":"186","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_xdiv","isPrivate":true,"id":"_xdiv","line":"186","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_xstep","isPrivate":true,"id":"_xstep","line":"186","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_ymin","isPrivate":true,"id":"_ymin","line":"187","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_ymax","isPrivate":true,"id":"_ymax","line":"187","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_ydiv","isPrivate":true,"id":"_ydiv","line":"187","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_ystep","isPrivate":true,"id":"_ystep","line":"187","kind":"variable"},{"name":"_dataLength","isPrivate":true,"id":"_dataLength","line":"188","kind":"variable"},{"name":"_yWithData","isPrivate":true,"id":"_yWithData","line":"189","kind":"variable"},{"name":"Plot2D","id":"Plot2D8()","children":[{"initializedField":{"refId":"simplot/Plot2D/context","name":"context"},"ref":{"refId":"dart.dom.html/CanvasRenderingContext2D","name":"CanvasRenderingContext2D"},"name":"context","id":"context","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_ydata","name":"_ydata"},"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"name":"_ydata","isPrivate":true,"id":"_ydata","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_xdata","name":"_xdata"},"ref":{"refId":"dart.core/List","name":"List"},"name":"_xdata","isPrivate":true,"id":"_xdata","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_color","name":"_color"},"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"name":"_color","isPrivate":true,"id":"_color","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_style","name":"_style"},"ref":{"refId":"dart.collection/LinkedHashMap","name":"LinkedHashMap"},"name":"_style","isPrivate":true,"id":"_style","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_pwidth","name":"_pwidth"},"ref":{"refId":"dart.core/num","name":"num"},"name":"_pwidth","isPrivate":true,"id":"_pwidth","line":"192","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_pheight","name":"_pheight"},"ref":{"refId":"dart.core/num","name":"num"},"name":"_pheight","isPrivate":true,"id":"_pheight","line":"192","kind":"param"},{"initializedField":{"refId":"simplot/Plot2D/_linewidth","name":"_linewidth"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_linewidth","isPrivate":true,"id":"_linewidth","line":"192","kind":"param"}],"line":"191","kind":"constructor"}],"line":"171","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\n  Private class _AxisConfigResults.\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/axis_config.dart","name":"_AxisConfigResults","isPrivate":true,"id":"_AxisConfigResults","children":[{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"div","id":"div","line":"93","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"min","id":"min","line":"94","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"max","id":"max","line":"95","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"name":"step","id":"step","line":"96","kind":"variable"},{"name":"_AxisConfigResults","id":"_AxisConfigResults4()","children":[{"initializedField":{"refId":"simplot/_AxisConfigResults/div","name":"div"},"ref":{"refId":"dart.core/num","name":"num"},"name":"div","id":"div","kind":"param"},{"initializedField":{"refId":"simplot/_AxisConfigResults/min","name":"min"},"ref":{"refId":"dart.core/num","name":"num"},"name":"min","id":"min","kind":"param"},{"initializedField":{"refId":"simplot/_AxisConfigResults/max","name":"max"},"ref":{"refId":"dart.core/num","name":"num"},"name":"max","id":"max","kind":"param"},{"initializedField":{"refId":"simplot/_AxisConfigResults/step","name":"step"},"ref":{"refId":"dart.core/num","name":"num"},"name":"step","id":"step","kind":"param"}],"line":"98","kind":"constructor"}],"line":"92","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\n Calculate optimum tick, min and max for a plot.\n To configure an axis:\n    AxisConfigResults xAxisCfg = new _AxisConfig().axes(xmin, xmax, width);\n    AxisConfigResults yAxisCfg = new _AxisConfig().axes(ymin, ymax, height);\n The parameters are returned as a _AxisConfigResults object:\n    xmin = xAxisCfg.min;\n    xmax = xAxisCfg.max;\n    xdiv = xAxisCfg.div;\n    xstep = xAxisCfg.step;\n    ymin = yAxisCfg.min;\n    ymax = yAxisCfg.max;\n    ydiv = yAxisCfg.div;\n    ystep = yAxisCfg.step;\n","uri":"file:///C:/Users/Richard/Documents/development/Dart-Editor/simplot/lib/src/axis_config.dart","name":"_AxisConfig","isPrivate":true,"id":"_AxisConfig","children":[{"returnType":{"refId":"simplot/_AxisConfigResults","name":"_AxisConfigResults"},"comment":"_AxisConfig method axes() computes and returns axis min,\nmax, division and step size.","name":"axes","id":"axes3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"listMin","id":"listMin","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"listMax","id":"listMax","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"distance","id":"distance","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"Calculate the ideal range given the min and max of the list of points.","name":"idealRange","id":"idealRange2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"listMin","id":"listMin","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"listMax","id":"listMax","kind":"param"}],"line":"46","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"Calculate the ideal tick spacing given the ideal range (delta)\nand the max number of tics based on about a 50 px spacing.","name":"idealTicks","id":"idealTicks2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"delta","id":"delta","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"maxNumTics","id":"maxNumTics","kind":"param"}],"line":"73","kind":"method"}],"line":"23","kind":"class"}],"line":"28","kind":"library"}